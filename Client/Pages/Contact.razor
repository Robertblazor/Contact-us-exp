@page "/contact"
@using System.Net.Http.Json
@using System.Threading.Tasks

<h1>Contact Us</h1>

@if (isSending)
{
    <p>Sending message...</p>
}
else if (isSent)
{
    <p>Message sent!</p>
}

<form>
    <div>
        <label for="name">Name:</label>
        <input type="text" id="name" name="name" @bind-value=name required />
        @if (name == null || name.Trim() == "")
        {
            <p class="error">Please enter your name.</p>
        }
    </div>
    <div>
        <label for="email">Email:</label>
        <input type="email" id="email" name="email" @bind-value=email required />
        @if (email == null || email.Trim() == "")
        {
            <p class="error">Please enter your email address.</p>
        }
        else if (!IsValidEmail(email))
        {
            <p class="error">Please enter a valid email address.</p>
        }
    </div>
    <div>
        <label for="message">Message:</label>
         <InputTextArea @bind-Value=message style=" width: 100%; height: 60vh; min-height: 100px;" />
        @if (message == null || message.Trim() == "")
        {
            <p class="error">Please enter a message.</p>
        }
    </div>
    <button type="submit" disabled="@(!IsValidForm())" @onclick="SendEmails">Send</button>
</form> 

@code {
    private string name;
    private string email;
    private string message;
    private bool isSending;
    private bool isSent;
    private string errorMessage;

    private async Task SendEmails()
    {
        isSending = true;
        var httpClient = new HttpClient();
        try
        {
            var response = await httpClient.PostAsJsonAsync("/api/SendEmails", new { name, email, message });
            isSending = false;
            isSent = response.IsSuccessStatusCode;
            if (!isSent)
            {
                errorMessage = "Failed to send message. Please try again later.";
            }
            
        }
        catch (Exception)
        {
            isSending = false;
            errorMessage = "An error occurred while sending the message. Please try again later.";
        }
    }

    private bool IsValidEmail(string email)
    {
        try
        {
            var addr = new System.Net.Mail.MailAddress(email);
            return addr.Address == email;
        }
        catch
        {
            return false;
        }
    }

    private bool IsValidForm()
    {
        return name != null && name.Trim() != "" && email != null && email.Trim() != "" && IsValidEmail(email) && message != null && message.Trim() != "";
    }
}